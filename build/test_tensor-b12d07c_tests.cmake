add_test( [==[at() stress small grid: all coordinates valid, neighbors distinct]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() stress small grid: all coordinates valid\, neighbors distinct]==]  )
set_tests_properties( [==[at() stress small grid: all coordinates valid, neighbors distinct]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[Tensor throws on mismatched size]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[Tensor throws on mismatched size]==]  )
set_tests_properties( [==[Tensor throws on mismatched size]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() row-major mapping on 3D]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() row-major mapping on 3D]==]  )
set_tests_properties( [==[at() row-major mapping on 3D]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[Tensor construction and shape check - bigger dimensions]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[Tensor construction and shape check - bigger dimensions]==]  )
set_tests_properties( [==[Tensor construction and shape check - bigger dimensions]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[Tensor out-of-range coordinate throws]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[Tensor out-of-range coordinate throws]==]  )
set_tests_properties( [==[Tensor out-of-range coordinate throws]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() boundary indices on 1D and 2D]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() boundary indices on 1D and 2D]==]  )
set_tests_properties( [==[at() boundary indices on 1D and 2D]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() rank mismatch and index OOB]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() rank mismatch and index OOB]==]  )
set_tests_properties( [==[at() rank mismatch and index OOB]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[Tensor construction and shape check]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[Tensor construction and shape check]==]  )
set_tests_properties( [==[Tensor construction and shape check]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() multiple writes are reflected correctly]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() multiple writes are reflected correctly]==]  )
set_tests_properties( [==[at() multiple writes are reflected correctly]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() const overload returns const ref (read-only)]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() const overload returns const ref (read-only)]==]  )
set_tests_properties( [==[at() const overload returns const ref (read-only)]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[Tensor element access with at()]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[Tensor element access with at()]==]  )
set_tests_properties( [==[Tensor element access with at()]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() end-to-end: fill via at() then verify]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() end-to-end: fill via at() then verify]==]  )
set_tests_properties( [==[at() end-to-end: fill via at() then verify]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[at() sequential row-major traversal equals flat order]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_tensor [==[at() sequential row-major traversal equals flat order]==]  )
set_tests_properties( [==[at() sequential row-major traversal equals flat order]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
set( test_tensor_TESTS [==[at() stress small grid: all coordinates valid, neighbors distinct]==] [==[Tensor throws on mismatched size]==] [==[at() row-major mapping on 3D]==] [==[Tensor construction and shape check - bigger dimensions]==] [==[Tensor out-of-range coordinate throws]==] [==[at() boundary indices on 1D and 2D]==] [==[at() rank mismatch and index OOB]==] [==[Tensor construction and shape check]==] [==[at() multiple writes are reflected correctly]==] [==[at() const overload returns const ref (read-only)]==] [==[Tensor element access with at()]==] [==[at() end-to-end: fill via at() then verify]==] [==[at() sequential row-major traversal equals flat order]==])
