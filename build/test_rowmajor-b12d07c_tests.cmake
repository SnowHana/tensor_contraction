add_test( [==[RowMajorLayout: stride construction for 3D]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout: stride construction for 3D]==]  )
set_tests_properties( [==[RowMajorLayout: stride construction for 3D]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout: larger dims sanity check]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout: larger dims sanity check]==]  )
set_tests_properties( [==[RowMajorLayout: larger dims sanity check]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord larger dims sanity]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord larger dims sanity]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord larger dims sanity]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout: 2D mapping]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout: 2D mapping]==]  )
set_tests_properties( [==[RowMajorLayout: 2D mapping]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout: 1D degenerate case]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout: 1D degenerate case]==]  )
set_tests_properties( [==[RowMajorLayout: 1D degenerate case]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord out-of-range throws]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord out-of-range throws]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord out-of-range throws]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord roundtrip equals identity (3D)]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord roundtrip equals identity (3D)]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord roundtrip equals identity (3D)]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord basic 3D spot checks]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord basic 3D spot checks]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord basic 3D spot checks]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord 1D degenerates to identity of index]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord 1D degenerates to identity of index]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord 1D degenerates to identity of index]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout: rank mismatch throws]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout: rank mismatch throws]==]  )
set_tests_properties( [==[RowMajorLayout: rank mismatch throws]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
add_test( [==[RowMajorLayout::toCoord 2D inverse mapping]==] /home/daniel/cpp_projects/tensor_multiplier/build/test_rowmajor [==[RowMajorLayout::toCoord 2D inverse mapping]==]  )
set_tests_properties( [==[RowMajorLayout::toCoord 2D inverse mapping]==] PROPERTIES WORKING_DIRECTORY /home/daniel/cpp_projects/tensor_multiplier/build SKIP_RETURN_CODE 4)
set( test_rowmajor_TESTS [==[RowMajorLayout: stride construction for 3D]==] [==[RowMajorLayout: larger dims sanity check]==] [==[RowMajorLayout::toCoord larger dims sanity]==] [==[RowMajorLayout: 2D mapping]==] [==[RowMajorLayout: 1D degenerate case]==] [==[RowMajorLayout::toCoord out-of-range throws]==] [==[RowMajorLayout::toCoord roundtrip equals identity (3D)]==] [==[RowMajorLayout::toCoord basic 3D spot checks]==] [==[RowMajorLayout::toCoord 1D degenerates to identity of index]==] [==[RowMajorLayout: rank mismatch throws]==] [==[RowMajorLayout::toCoord 2D inverse mapping]==])
